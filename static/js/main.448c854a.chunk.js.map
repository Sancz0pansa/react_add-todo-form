{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","cn","completed","title","TodoList","todos","map","userId","usersFromServer","find","App","useState","setTitle","selectedUser","setSelectedUser","showTitleWarning","setShowTitleWarning","showUserWarning","setShowUserWarning","useReducer","x","forceUpdate","action","method","onSubmit","e","preventDefault","length","placeholder","type","value","onChange","target","disabled","onClick","push","Math","max","el","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.448c854a.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import User from '../../Types/User';\n\ntype UserInfoProps = {\n  user: User\n};\n\nexport const UserInfo = ({ user }: UserInfoProps) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport Todo from '../../Types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype TodoInfoProps = {\n  todo: Todo,\n};\n\nexport const TodoInfo = ({ todo } : TodoInfoProps) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={cn('TodoInfo',\n        { 'TodoInfo--completed': todo.completed })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      {todo.user && <UserInfo user={todo.user} />}\n    </article>\n  );\n};\n","import Todo from '../../Types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype TodoListProps = {\n  todos: Todo[]\n};\n\nexport const TodoList = ({ todos } : TodoListProps) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\n\nimport { FormEventHandler, useReducer, useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport Todo from './Types/Todo';\nimport { TodoList } from './components/TodoList';\n\nconst getUser = (id: number) => {\n  const foundUser = usersFromServer.find(user => user.id === id);\n\n  return foundUser || null;\n};\n\nconst todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [selectedUser, setSelectedUser] = useState('');\n  const [showTitleWarning, setShowTitleWarning] = useState(false);\n  const [showUserWarning, setShowUserWarning] = useState(false);\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention, @typescript-eslint/no-unused-vars\n  const [_, forceUpdate] = useReducer(x => x + 1, 0);\n\n  const handleSubmit: FormEventHandler = (e) => {\n    e.preventDefault();\n    if (title.length !== 0 && selectedUser !== '') {\n      setTitle('');\n      setSelectedUser('');\n    }\n  };\n\n  const handleClick = () => {\n    if (title.length === 0) {\n      setShowTitleWarning(true);\n    }\n\n    if (selectedUser === '') {\n      setShowUserWarning(true);\n    }\n\n    if (selectedUser !== '' && title.length > 0) {\n      todos.push({\n        id: Math.max(...todos.map(el => el.id)) + 1,\n        title,\n        completed: false,\n        user: usersFromServer.find(user => user.name === selectedUser)\n    || null,\n        userId: usersFromServer\n          .find(user => user.name === selectedUser)?.id as number,\n      });\n      forceUpdate();\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <input\n            placeholder=\"Enter a title\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={title}\n            onChange={(e) => {\n              setTitle(e.target.value);\n              setShowTitleWarning(false);\n            }}\n          />\n          {showTitleWarning\n          && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={selectedUser}\n            onChange={(e) => {\n              setSelectedUser(e.target.value);\n              setShowUserWarning(false);\n            }}\n          >\n            <option value=\"\" disabled>Choose a user</option>\n            {usersFromServer.map(user => {\n              return (<option>{user.name}</option>);\n            })}\n          </select>\n\n          {showUserWarning\n          && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\" onClick={handleClick}>\n          Add\n        </button>\n      </form>\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}